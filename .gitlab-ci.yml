stages:
  - test
  - prepare-deployment
  - deploy

test:
  stage: test

  script:
    - module load cmake
    - if [ "$CUDA" == "YES" ]; then module load cuda/11.4; fi

    - CUDA_VISIBLE_DEVICES=$CI_RUNNER_ID

    - rm -rf deploy
    - rm -rf build && mkdir build && cd build

    - cmake -DCMAKE_BUILD_TYPE=DEBUG -DSTORMM_ENABLE_CUDA=$CUDA -DSTORMM_ENABLE_TEST_COVERAGE=YES -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/deploy ..
    - make -j

    - make test -j
    - gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml --root ${CI_PROJECT_DIR}

    - make install

    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${CI_PROJECT_DIR}/deploy/lib/
    - export PATH=$PATH:${CI_PROJECT_DIR}/deploy/bin/

    - cd ${CI_PROJECT_DIR}

    # Sanity check that our installed apps run
    - if [ "$CUDA" == "YES" ]; then conformer.stormm.cuda --help; else conformer.stormm --help; fi
    - if [ "$CUDA" == "YES" ]; then ffrefine.stormm.cuda --help; else ffrefine.stormm --help; fi
    # TODO: Uncomment if `dynamics.stormm` gets a help message
    # - if [ "$CUDA" == "YES" ]; then dynamics.stormm.cuda --help; else dynamics.stormm --help; fi

  parallel:
    matrix:
      - CUDA: ["NO"]
        NEO_TAG: ["intel"]
      - CUDA: ["YES"]
        NEO_TAG: ["gpu"]

  coverage: /^\s*lines:\s*\d+.\d+\%/

  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml

  tags:
    - $NEO_TAG

prepare-deployment:
  stage: prepare-deployment
  image: condaforge/mambaforge
  script:
    - mamba install --yes conda-smithy

    - git config --global user.email "ci@gitlab.com"
    - git config --global user.name "GitLab CI"

    # Use the conda-forge machinery to generate the relevant docker build files / environment
    - cp -a conda recipe && mv recipe/recipe.yaml recipe/meta.yaml

    - conda smithy init recipe
    - conda smithy rerender --feedstock_directory stormm-recipe-feedstock

    - git clone . stormm-recipe-feedstock/recipe/repo

  artifacts:
    paths:
      # Pass the build files / environment into the next step
      - ./stormm-recipe-feedstock
    expire_in: 1 hour
  only:
    - tags

deploy-linux:
  stage: deploy
  image: docker
  services:
    - docker:dind
  script:
    - apk add bash py3-pip

    - cd stormm-recipe-feedstock
    - CPU_COUNT=4 CI="gitlab" UPLOAD_PACKAGES="False" ./.scripts/run_docker_build.sh

    - pip install --upgrade cloudsmith-cli
    - find build_artifacts/linux-64 -name "*.conda" | xargs -n 1 cloudsmith push conda roivant/psivant
  parallel:
    matrix:
      - CONFIG:
          - "linux_64_cuda_compiler_versionNonecxx_compiler_version11"
          - "linux_64_cuda_compiler_version11.0cxx_compiler_version9"
        CLOUDSMITH_API_KEY: $CLOUDSMITH_API_KEY
        CLOUDSMITH_API_USER: $CLOUDSMITH_API_USER
  only:
    - tags
  tags:
    - saas-linux-large-amd64