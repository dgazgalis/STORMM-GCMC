test:
  stage: test

  script:
    - module load cmake
    - if [ "$CUDA" == "YES" ]; then module load cuda/11.4; fi

    - CUDA_VISIBLE_DEVICES=$CI_RUNNER_ID

    - rm -rf deploy
    - rm -rf build && mkdir build && cd build

    - cmake -DCMAKE_BUILD_TYPE=DEBUG -DSTORMM_ENABLE_CUDA=$CUDA -DSTORMM_ENABLE_TEST_COVERAGE=YES -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/deploy ..
    - make -j

    - make test -j
    - gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml --root ${CI_PROJECT_DIR}

    - make install

    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${CI_PROJECT_DIR}/deploy/lib/
    - export PATH=$PATH:${CI_PROJECT_DIR}/deploy/bin/

    - cd ${CI_PROJECT_DIR}

    # Sanity check that our installed apps run
    - if [ "$CUDA" == "YES" ]; then conformer.stormm.cuda --help; else conformer.stormm --help; fi
    - if [ "$CUDA" == "YES" ]; then ffrefine.stormm.cuda --help; else ffrefine.stormm --help; fi
    # TODO: Uncomment if `dynamics.stormm` gets a help message
    # - if [ "$CUDA" == "YES" ]; then dynamics.stormm.cuda --help; else dynamics.stormm --help; fi

  parallel:
    matrix:
      - CUDA: ["NO", "YES"]

  coverage: /^\s*lines:\s*\d+.\d+\%/

  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml

  tags:
    - intel
